# Generated by Django 5.0.6 on 2024-10-05 08:37

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('image', models.ImageField(null=True, upload_to='images')),
                ('type', models.CharField(choices=[('L', 'Licence'), ('P', 'Passport'), ('FF', 'FaceFront'), ('FS', 'FaceSide'), ('FB', 'fullBody')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.IntegerField(null=True)),
                ('firstName', models.CharField(max_length=100, null=True)),
                ('lastName', models.CharField(max_length=100, null=True)),
                ('dateOfBirth', models.DateTimeField(null=True)),
                ('dataCreated', models.DateTimeField(default=datetime.datetime.now)),
                ('creatorId', models.IntegerField(null=True)),
                ('comments', models.CharField(max_length=1000, null=True)),
                ('status', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Emails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('Email', models.EmailField(max_length=254, null=True)),
                ('type', models.CharField(choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2)),
                ('dataCreated', models.DateTimeField(default=datetime.datetime.now)),
                ('comments', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NextOfKin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('kinContactId', models.IntegerField()),
                ('Relationship', models.CharField(max_length=100, null=True)),
                ('comments', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('type', models.CharField(choices=[('Ze', 'Zelle'), ('BT', 'Bank Transfer')], max_length=2)),
                ('bankName', models.CharField(max_length=100, null=True)),
                ('Name', models.CharField(max_length=100, null=True)),
                ('accountNumber', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumbers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('Number', models.CharField(max_length=100, null=True)),
                ('NetworkProvider', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2)),
                ('Country', models.CharField(max_length=100, null=True)),
                ('dataCreated', models.DateTimeField(default=datetime.datetime.now)),
                ('comments', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('address', models.CharField(max_length=1000, null=True)),
                ('title', models.CharField(max_length=100)),
                ('dataCreated', models.DateTimeField(default=datetime.datetime.now)),
                ('comments', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsersSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userContactId', models.IntegerField()),
                ('Name', models.CharField(max_length=100, null=True)),
                ('link', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(choices=[('M', 'Main'), ('S', 'Secondary')], max_length=2)),
                ('dataCreated', models.DateTimeField(default=datetime.datetime.now)),
                ('comments', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('paidMember', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('bio', models.CharField(max_length=1000, null=True)),
                ('image_ProfileLarge', models.ImageField(null=True, upload_to='images')),
                ('image_ProfileSmall', models.ImageField(null=True, upload_to='images')),
                ('image', models.ImageField(null=True, upload_to='images')),
                ('instagram', models.CharField(max_length=100, null=True)),
                ('twiter', models.CharField(max_length=100, null=True)),
                ('tiktok', models.CharField(max_length=100, null=True)),
                ('otherOnline', models.CharField(max_length=100, null=True)),
                ('fb', models.CharField(max_length=100, null=True)),
                ('website', models.CharField(max_length=100, null=True)),
                ('phone', models.BigIntegerField(null=True)),
                ('birthday', models.DateField(null=True)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
